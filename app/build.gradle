apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.setiawanpaiman.sunnyreader"
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        buildConfigField 'String', 'BASE_URL_API', '\"https://hacker-news.firebaseio.com\"'
        testInstrumentationRunner "com.setiawanpaiman.sunnyreader.runner.MockAndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    jacocoClasspath = configurations['androidJacocoAnt']

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      'com/setiawanpaiman/sunnyreader/di/**',
                      'com/setiawanpaiman/sunnyreader/domain/api/**',
                      'com/raizlabs/**',
                      '**/*_Adapter*.*',
                      '**/*_Table*.*',
                      '**/*_Database*.*',
                      '**/*$ViewBinder*.*',
    ]
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files(["${buildDir}/jacoco/testDebugUnitTest.exec",
                           "${buildDir}/outputs/code-coverage/connected/coverage.ec"
    ])
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
}

tasks.coveralls {
    dependsOn 'jacocoTestReport'
    onlyIf { System.env.'CI' }
}

ext {
    androidSupportVersion = "23.3.0"
    retrofitVersion = "2.0.2"
    daggerVersion = "2.2"
    dbFlowVersion = "3.0.0-beta5"
    butterKnifeVersion = "8.0.0"
    okHttpVersion = "3.2.0"
    espressoVersion = "2.2.2"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testApt "com.google.dagger:dagger-compiler:${daggerVersion}"
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-library:1.3"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "org.robolectric:robolectric:3.0"
    testCompile "org.robolectric:shadows-support-v4:3.0"

    androidTestApt "com.google.dagger:dagger-compiler:${daggerVersion}"
    androidTestCompile "org.hamcrest:hamcrest-library:1.3"
    androidTestCompile "org.mockito:mockito-core:1.10.19"
    androidTestCompile "com.crittercism.dexmaker:dexmaker:1.4"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:1.4"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:1.4"
    androidTestCompile "com.android.support:appcompat-v7:${androidSupportVersion}"
    androidTestCompile "com.android.support:design:${androidSupportVersion}"
    androidTestCompile "com.android.support:recyclerview-v7:${androidSupportVersion}"
    androidTestCompile "com.android.support:support-v4:${androidSupportVersion}"
    androidTestCompile "com.android.support:support-annotations:${androidSupportVersion}"
    androidTestCompile "com.android.support.test:runner:0.5"
    androidTestCompile "com.android.support.test:rules:0.5"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-web:${espressoVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-idling-resource:${espressoVersion}"

    compile "com.android.support:appcompat-v7:${androidSupportVersion}"
    compile "com.android.support:cardview-v7:${androidSupportVersion}"
    compile "com.android.support:design:${androidSupportVersion}"
    compile "com.android.support:recyclerview-v7:${androidSupportVersion}"
    compile "com.android.support:support-v4:${androidSupportVersion}"
    compile "com.android.support:support-annotations:${androidSupportVersion}"
    apt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbFlowVersion}"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:${dbFlowVersion}"
    compile "com.github.Raizlabs.DBFlow:dbflow:${dbFlowVersion}"
    apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    compile "com.google.dagger:dagger:${daggerVersion}"
    apt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    compile "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.android.support:support-v4:23.3.0'
}
